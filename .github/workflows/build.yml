name: build
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:
    inputs:
      packages:
        description: Packages to build
        type: string
        required: false

jobs:
  generate-job-list:
    runs-on: ubuntu-latest
    outputs:
      packages: ${{ steps.generate.outputs.packages }}
    steps:
      - name: Checkout main
        uses: actions/checkout@v4

      - name: Generate job list
        id: generate
        run: |
          if [ "$GITHUB_EVENT_NAME" = workflow_dispatch ]; then
            packages="${INPUT_PACKAGES:=$(echo python*)}"
          else
            git fetch origin $SHA_BEFORE
            packages="$(git diff --name-only $SHA_CURRENT $SHA_BEFORE -- python* | sed 's|/.*||')"
          fi
          echo "packages=$(jq -c -n '$ARGS.positional' --args $packages)" >> $GITHUB_OUTPUT
          echo "Packages: ${packages:=(none)}"
        env:
          SHA_BEFORE: ${{ github.event.before }}
          SHA_CURRENT: ${{ github.sha }}
          INPUT_PACKAGES: ${{ inputs.packages }}

  build:
    runs-on: ubuntu-latest
    needs: generate-job-list
    if: ${{ needs.generate-job-list.outputs.packages != '[]' }}
    container:
      image: archlinux
      options: --privileged
      volumes:
        - ${{ github.workspace }}:${{ github.workspace }}
    strategy:
      fail-fast: false
      matrix:
        package: ${{ fromJson(needs.generate-job-list.outputs.packages) }}
    steps:
      - name: Get date
        id: date
        run: echo "date=$(date +%F)" >> $GITHUB_OUTPUT

      - name: Cache pacman packages
        uses: actions/cache@v1
        with:
          path: /var/cache/pacman/pkg
          key: arch-pkgs-${{ steps.date.outputs.date }}
          restore-keys: arch-pkgs

      - name: Cache archbuild
        uses: actions/cache@v1
        with:
          path: /var/lib/archbuild
          key: archbuild-${{ steps.date.outputs.date }}
          restore-keys: archbuild

      - name: Checkout main
        uses: actions/checkout@v4

      - run: echo ${{ github.workspace }}
      - run: echo $GITHUB_WORKSPACE
      - run: pwd
      - run: ls

      - run: pacman -Syu base-devel devtools

      - name: Build package
        run: pkgctl build ${{ matrix.package }}/PKGBUILD

#      - name: Build package
#        uses: FFY00/build-arch-package@v1
#        with:
#          PKGBUILD: ${{ github.workspace }}/${{ matrix.package }}/PKGBUILD

      - name: Upload built package
        uses: actions/upload-artifact@v4
        with:
          name: package-${{ matrix.package }}
          path: arch-packages/*.pkg.tar.zst

      - name: Upload logs
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: logs-${{ matrix.package }}
          path: arch-packages/*.log

  update-repo:
    runs-on: ubuntu-latest
    container:
      image: alpine
    needs:
      - generate-job-list
      - build
    steps:
      - name: Install dependencies
        run: apk add git pacman

      - name: Checkout main
        uses: actions/checkout@v4
        with:
          path: build

      - name: Checkout repo branch
        uses: actions/checkout@v4
        with:
          ref: gh-pages
          path: repo

      - name: Setup git
        run: |
          git config --global user.email actions@github.com
          git config --global user.name 'Github Actions'
          git config --global core.editor true

      - name: Remove outdated packages
        env:
          PACKAGES: ${{ needs.generate-job-list.outputs.packages }}
        run: |
          for pkg in $(echo $PACKAGES | jq -r .[]); do
            rm -f repo/$pkg-*
          done

      - name: Download built packages
        uses: actions/download-artifact@v4
        with:
          download: package
          path: repo
          merge-multiple: true

      - name: Generate repo database
        run: |
          repo-add --prevent-downgrade repo/python.db.tar.gz "$HOME"/arch-packages/*.pkg.*
          rm -f repo/*.old

      - name: Generate index.html for repo
        run: build/generate-index.sh repo

      - name: Commit packages
        run: |
          cd repo
          git add -u
          git add *
          git commit --fixup HEAD || true
          git rebase -i --autosquash --root

      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.ACCESS_TOKEN }}
          branch: gh-pages
          directory: repo
          force: true
