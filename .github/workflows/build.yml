name: build
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: archlinux
      options: --privileged
      volumes:
        - /sys/fs/cgroup:/sys/fs/cgroup
    strategy:
      fail-fast: false
      matrix:
        python: [35, 36, 37, 38, 39, 310]
      max-parallel: 1
    steps:
      - name: Get date
        id: date
        run: echo "::set-output name=date::$(date +%F)"

      - name: Cache
        uses: actions/cache@v1
        with:
          path: /var/cache/pacman/pkg
          key: arch-pkgs-${{ steps.date.outputs.date }}
          restore-keys: arch-pkgs

      - name: Checkout main
        uses: actions/checkout@v2
        with:
          path: main

      - name: Check for source changes
        id: check
        env:
          PREVIOUS: ${{ github.event.before }}
          CURRENT: ${{ github.sha }}
          PY_VER: ${{ matrix.python }}
        run: |
          cd "$GITHUB_WORKSPACE"/main
          git fetch origin $PREVIOUS
          git diff --name-only $PREVIOUS $CURRENT | grep -q python$PY_VER && echo '::set-output name=run::true' || true

      - name: Checkout repo
        if: steps.check.outputs.run == 'true'
        run: git clone --branch gh-pages https://github.com/${{ github.repository }}.git repo

      - name: Setup git
        if: steps.check.outputs.run == 'true'
        run: |
          git config --global user.email actions@github.com
          git config --global user.name 'Github Actions'
          git config --global core.editor true

      - name: Remove existing packages
        if: steps.check.outputs.run == 'true'
        env:
          PY_VER: ${{ matrix.python }}
        run: |
          rm -f "$GITHUB_WORKSPACE"/repo/python$PY_VER*.pkg.*

      - name: Build Arch Linux package
        if: steps.check.outputs.run == 'true'
        uses: FFY00/build-arch-package@v1
        with:
          PKGBUILD: main/python$PY_VER/PKGBUILD

      - name: Generate repo database
        if: steps.check.outputs.run == 'true'
        env:
          PY_VER: ${{ matrix.python }}
        run: |
          cd "$GITHUB_WORKSPACE"/repo
          repo-add python.db.tar.gz "$HOME"/arch-packages/python$PY_VER*.pkg.*
          rm -f *.old

      - name: Generate index.html for repo
        if: steps.check.outputs.run == 'true'
        run: |
          "$GITHUB_WORKSPACE"/main/generate-index.sh "$GITHUB_WORKSPACE"/repo

      - name: Commit packages
        if: steps.check.outputs.run == 'true'
        run: |
          cd "$GITHUB_WORKSPACE"/repo
          git add -u
          git add *
          git commit --fixup HEAD || true
          git rebase -i --autosquash --root

      - name: Push changes
        if: steps.check.outputs.run == 'true'
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.ACCESS_TOKEN }}
          branch: gh-pages
          directory: repo
          force: true
